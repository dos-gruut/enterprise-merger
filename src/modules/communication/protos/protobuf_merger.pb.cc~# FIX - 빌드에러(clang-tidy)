// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_merger.proto

#include "protobuf_merger.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace grpcMtoM {
class CheckAliveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckAliveRequest>
      _instance;
} _CheckAliveRequest_default_instance_;
class CheckAliveReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckAliveReply>
      _instance;
} _CheckAliveReply_default_instance_;
class DataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequest>
      _instance;
} _DataRequest_default_instance_;
class DataReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataReply>
      _instance;
} _DataReply_default_instance_;
}  // namespace grpcMtoM
namespace protobuf_protobuf_5fMtoM_2eproto {
static void InitDefaultsCheckAliveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcMtoM::_CheckAliveRequest_default_instance_;
    new (ptr) ::grpcMtoM::CheckAliveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcMtoM::CheckAliveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckAliveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckAliveRequest}, {}};

static void InitDefaultsCheckAliveReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcMtoM::_CheckAliveReply_default_instance_;
    new (ptr) ::grpcMtoM::CheckAliveReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcMtoM::CheckAliveReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckAliveReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckAliveReply}, {}};

static void InitDefaultsDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcMtoM::_DataRequest_default_instance_;
    new (ptr) ::grpcMtoM::DataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcMtoM::DataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataRequest}, {}};

static void InitDefaultsDataReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcMtoM::_DataReply_default_instance_;
    new (ptr) ::grpcMtoM::DataReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcMtoM::DataReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CheckAliveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckAliveReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataReply.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::CheckAliveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::CheckAliveRequest, checker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::CheckAliveReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::CheckAliveReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::DataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::DataRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::DataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcMtoM::DataReply, checker_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcMtoM::CheckAliveRequest)},
  { 6, -1, sizeof(::grpcMtoM::CheckAliveReply)},
  { 12, -1, sizeof(::grpcMtoM::DataRequest)},
  { 18, -1, sizeof(::grpcMtoM::DataReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcMtoM::_CheckAliveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcMtoM::_CheckAliveReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcMtoM::_DataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcMtoM::_DataReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protobuf_merger.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023protobuf_MtoM.proto\022\010grpcMtoM\"$\n\021Check"
      "AliveRequest\022\017\n\007checker\030\001 \001(\010\"\"\n\017CheckAl"
      "iveReply\022\017\n\007message\030\001 \001(\010\"\033\n\013DataRequest"
      "\022\014\n\004data\030\001 \001(\014\"\034\n\tDataReply\022\017\n\007checker\030\001"
      " \001(\0102\221\001\n\rcommunication\022F\n\ncheckAlive\022\033.g"
      "rpcMtoM.CheckAliveRequest\032\031.grpcMtoM.Che"
      "ckAliveReply\"\000\0228\n\010sendData\022\025.grpcMtoM.Da"
      "taRequest\032\023.grpcMtoM.DataReply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf_merger.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protobuf_5fMtoM_2eproto
namespace grpcMtoM {

// ===================================================================

void CheckAliveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckAliveRequest::kCheckerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckAliveRequest::CheckAliveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_5fMtoM_2eproto::scc_info_CheckAliveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcMtoM.CheckAliveRequest)
}
CheckAliveRequest::CheckAliveRequest(const CheckAliveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  checker_ = from.checker_;
  // @@protoc_insertion_point(copy_constructor:grpcMtoM.CheckAliveRequest)
}

void CheckAliveRequest::SharedCtor() {
  checker_ = false;
}

CheckAliveRequest::~CheckAliveRequest() {
  // @@protoc_insertion_point(destructor:grpcMtoM.CheckAliveRequest)
  SharedDtor();
}

void CheckAliveRequest::SharedDtor() {
}

void CheckAliveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckAliveRequest::descriptor() {
  ::protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckAliveRequest& CheckAliveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_5fMtoM_2eproto::scc_info_CheckAliveRequest.base);
  return *internal_default_instance();
}


void CheckAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcMtoM.CheckAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  checker_ = false;
  _internal_metadata_.Clear();
}

bool CheckAliveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcMtoM.CheckAliveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool checker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &checker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcMtoM.CheckAliveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcMtoM.CheckAliveRequest)
  return false;
#undef DO_
}

void CheckAliveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcMtoM.CheckAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool checker = 1;
  if (this->checker() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->checker(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcMtoM.CheckAliveRequest)
}

::google::protobuf::uint8* CheckAliveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcMtoM.CheckAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool checker = 1;
  if (this->checker() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->checker(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcMtoM.CheckAliveRequest)
  return target;
}

size_t CheckAliveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcMtoM.CheckAliveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool checker = 1;
  if (this->checker() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckAliveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcMtoM.CheckAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckAliveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckAliveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcMtoM.CheckAliveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcMtoM.CheckAliveRequest)
    MergeFrom(*source);
  }
}

void CheckAliveRequest::MergeFrom(const CheckAliveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcMtoM.CheckAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.checker() != 0) {
    set_checker(from.checker());
  }
}

void CheckAliveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcMtoM.CheckAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckAliveRequest::CopyFrom(const CheckAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcMtoM.CheckAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckAliveRequest::IsInitialized() const {
  return true;
}

void CheckAliveRequest::Swap(CheckAliveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckAliveRequest::InternalSwap(CheckAliveRequest* other) {
  using std::swap;
  swap(checker_, other->checker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckAliveRequest::GetMetadata() const {
  protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckAliveReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckAliveReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckAliveReply::CheckAliveReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_5fMtoM_2eproto::scc_info_CheckAliveReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcMtoM.CheckAliveReply)
}
CheckAliveReply::CheckAliveReply(const CheckAliveReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_ = from.message_;
  // @@protoc_insertion_point(copy_constructor:grpcMtoM.CheckAliveReply)
}

void CheckAliveReply::SharedCtor() {
  message_ = false;
}

CheckAliveReply::~CheckAliveReply() {
  // @@protoc_insertion_point(destructor:grpcMtoM.CheckAliveReply)
  SharedDtor();
}

void CheckAliveReply::SharedDtor() {
}

void CheckAliveReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckAliveReply::descriptor() {
  ::protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckAliveReply& CheckAliveReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_5fMtoM_2eproto::scc_info_CheckAliveReply.base);
  return *internal_default_instance();
}


void CheckAliveReply::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcMtoM.CheckAliveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_ = false;
  _internal_metadata_.Clear();
}

bool CheckAliveReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcMtoM.CheckAliveReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &message_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcMtoM.CheckAliveReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcMtoM.CheckAliveReply)
  return false;
#undef DO_
}

void CheckAliveReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcMtoM.CheckAliveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool message = 1;
  if (this->message() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcMtoM.CheckAliveReply)
}

::google::protobuf::uint8* CheckAliveReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcMtoM.CheckAliveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool message = 1;
  if (this->message() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcMtoM.CheckAliveReply)
  return target;
}

size_t CheckAliveReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcMtoM.CheckAliveReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool message = 1;
  if (this->message() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckAliveReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcMtoM.CheckAliveReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckAliveReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckAliveReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcMtoM.CheckAliveReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcMtoM.CheckAliveReply)
    MergeFrom(*source);
  }
}

void CheckAliveReply::MergeFrom(const CheckAliveReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcMtoM.CheckAliveReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message() != 0) {
    set_message(from.message());
  }
}

void CheckAliveReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcMtoM.CheckAliveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckAliveReply::CopyFrom(const CheckAliveReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcMtoM.CheckAliveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckAliveReply::IsInitialized() const {
  return true;
}

void CheckAliveReply::Swap(CheckAliveReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckAliveReply::InternalSwap(CheckAliveReply* other) {
  using std::swap;
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckAliveReply::GetMetadata() const {
  protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequest::DataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_5fMtoM_2eproto::scc_info_DataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcMtoM.DataRequest)
}
DataRequest::DataRequest(const DataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcMtoM.DataRequest)
}

void DataRequest::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:grpcMtoM.DataRequest)
  SharedDtor();
}

void DataRequest::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataRequest::descriptor() {
  ::protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequest& DataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_5fMtoM_2eproto::scc_info_DataRequest.base);
  return *internal_default_instance();
}


void DataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcMtoM.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcMtoM.DataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcMtoM.DataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcMtoM.DataRequest)
  return false;
#undef DO_
}

void DataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcMtoM.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcMtoM.DataRequest)
}

::google::protobuf::uint8* DataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcMtoM.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcMtoM.DataRequest)
  return target;
}

size_t DataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcMtoM.DataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcMtoM.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcMtoM.DataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcMtoM.DataRequest)
    MergeFrom(*source);
  }
}

void DataRequest::MergeFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcMtoM.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void DataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcMtoM.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequest::CopyFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcMtoM.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequest::IsInitialized() const {
  return true;
}

void DataRequest::Swap(DataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequest::InternalSwap(DataRequest* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataReply::kCheckerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataReply::DataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_5fMtoM_2eproto::scc_info_DataReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcMtoM.DataReply)
}
DataReply::DataReply(const DataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  checker_ = from.checker_;
  // @@protoc_insertion_point(copy_constructor:grpcMtoM.DataReply)
}

void DataReply::SharedCtor() {
  checker_ = false;
}

DataReply::~DataReply() {
  // @@protoc_insertion_point(destructor:grpcMtoM.DataReply)
  SharedDtor();
}

void DataReply::SharedDtor() {
}

void DataReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataReply::descriptor() {
  ::protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataReply& DataReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_5fMtoM_2eproto::scc_info_DataReply.base);
  return *internal_default_instance();
}


void DataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcMtoM.DataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  checker_ = false;
  _internal_metadata_.Clear();
}

bool DataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcMtoM.DataReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool checker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &checker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcMtoM.DataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcMtoM.DataReply)
  return false;
#undef DO_
}

void DataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcMtoM.DataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool checker = 1;
  if (this->checker() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->checker(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcMtoM.DataReply)
}

::google::protobuf::uint8* DataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcMtoM.DataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool checker = 1;
  if (this->checker() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->checker(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcMtoM.DataReply)
  return target;
}

size_t DataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcMtoM.DataReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool checker = 1;
  if (this->checker() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcMtoM.DataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcMtoM.DataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcMtoM.DataReply)
    MergeFrom(*source);
  }
}

void DataReply::MergeFrom(const DataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcMtoM.DataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.checker() != 0) {
    set_checker(from.checker());
  }
}

void DataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcMtoM.DataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataReply::CopyFrom(const DataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcMtoM.DataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataReply::IsInitialized() const {
  return true;
}

void DataReply::Swap(DataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataReply::InternalSwap(DataReply* other) {
  using std::swap;
  swap(checker_, other->checker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataReply::GetMetadata() const {
  protobuf_protobuf_5fMtoM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fMtoM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcMtoM
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcMtoM::CheckAliveRequest* Arena::CreateMaybeMessage< ::grpcMtoM::CheckAliveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grpcMtoM::CheckAliveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcMtoM::CheckAliveReply* Arena::CreateMaybeMessage< ::grpcMtoM::CheckAliveReply >(Arena* arena) {
  return Arena::CreateInternal< ::grpcMtoM::CheckAliveReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcMtoM::DataRequest* Arena::CreateMaybeMessage< ::grpcMtoM::DataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grpcMtoM::DataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcMtoM::DataReply* Arena::CreateMaybeMessage< ::grpcMtoM::DataReply >(Arena* arena) {
  return Arena::CreateInternal< ::grpcMtoM::DataReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
