// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_signer.proto

#include "protobuf_signer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace grpc_signer {
class SignerDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignerDataRequest>
      _instance;
} _SignerDataRequest_default_instance_;
class SignerDataReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignerDataReply>
      _instance;
} _SignerDataReply_default_instance_;
}  // namespace grpc_signer
namespace protobuf_protobuf_5fsigner_2eproto {
static void InitDefaultsSignerDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_signer::_SignerDataRequest_default_instance_;
    new (ptr) ::grpc_signer::SignerDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_signer::SignerDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignerDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignerDataRequest}, {}};

static void InitDefaultsSignerDataReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_signer::_SignerDataReply_default_instance_;
    new (ptr) ::grpc_signer::SignerDataReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_signer::SignerDataReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignerDataReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignerDataReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SignerDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignerDataReply.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_signer::SignerDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_signer::SignerDataRequest, check_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_signer::SignerDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_signer::SignerDataReply, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpc_signer::SignerDataRequest)},
  { 6, -1, sizeof(::grpc_signer::SignerDataReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_signer::_SignerDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_signer::_SignerDataReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protobuf_signer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025protobuf_signer.proto\022\013grpc_signer\"\"\n\021"
      "SignerDataRequest\022\r\n\005check\030\001 \001(\005\"\"\n\017Sign"
      "erDataReply\022\017\n\007message\030\001 \001(\0142a\n\023SignerCo"
      "mmunication\022J\n\010pullData\022\036.grpc_signer.Si"
      "gnerDataRequest\032\034.grpc_signer.SignerData"
      "Reply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 215);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf_signer.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protobuf_5fsigner_2eproto
namespace grpc_signer {

// ===================================================================

void SignerDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignerDataRequest::kCheckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignerDataRequest::SignerDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_5fsigner_2eproto::scc_info_SignerDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_signer.SignerDataRequest)
}
SignerDataRequest::SignerDataRequest(const SignerDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  check_ = from.check_;
  // @@protoc_insertion_point(copy_constructor:grpc_signer.SignerDataRequest)
}

void SignerDataRequest::SharedCtor() {
  check_ = 0;
}

SignerDataRequest::~SignerDataRequest() {
  // @@protoc_insertion_point(destructor:grpc_signer.SignerDataRequest)
  SharedDtor();
}

void SignerDataRequest::SharedDtor() {
}

void SignerDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignerDataRequest::descriptor() {
  ::protobuf_protobuf_5fsigner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fsigner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignerDataRequest& SignerDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_5fsigner_2eproto::scc_info_SignerDataRequest.base);
  return *internal_default_instance();
}


void SignerDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_signer.SignerDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  check_ = 0;
  _internal_metadata_.Clear();
}

bool SignerDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_signer.SignerDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 check = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_signer.SignerDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_signer.SignerDataRequest)
  return false;
#undef DO_
}

void SignerDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_signer.SignerDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 check = 1;
  if (this->check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->check(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_signer.SignerDataRequest)
}

::google::protobuf::uint8* SignerDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_signer.SignerDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 check = 1;
  if (this->check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->check(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_signer.SignerDataRequest)
  return target;
}

size_t SignerDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_signer.SignerDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 check = 1;
  if (this->check() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->check());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignerDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_signer.SignerDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignerDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignerDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_signer.SignerDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_signer.SignerDataRequest)
    MergeFrom(*source);
  }
}

void SignerDataRequest::MergeFrom(const SignerDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_signer.SignerDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.check() != 0) {
    set_check(from.check());
  }
}

void SignerDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_signer.SignerDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignerDataRequest::CopyFrom(const SignerDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_signer.SignerDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignerDataRequest::IsInitialized() const {
  return true;
}

void SignerDataRequest::Swap(SignerDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignerDataRequest::InternalSwap(SignerDataRequest* other) {
  using std::swap;
  swap(check_, other->check_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignerDataRequest::GetMetadata() const {
  protobuf_protobuf_5fsigner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fsigner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignerDataReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignerDataReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignerDataReply::SignerDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_5fsigner_2eproto::scc_info_SignerDataReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_signer.SignerDataReply)
}
SignerDataReply::SignerDataReply(const SignerDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_signer.SignerDataReply)
}

void SignerDataReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignerDataReply::~SignerDataReply() {
  // @@protoc_insertion_point(destructor:grpc_signer.SignerDataReply)
  SharedDtor();
}

void SignerDataReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignerDataReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignerDataReply::descriptor() {
  ::protobuf_protobuf_5fsigner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fsigner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignerDataReply& SignerDataReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_5fsigner_2eproto::scc_info_SignerDataReply.base);
  return *internal_default_instance();
}


void SignerDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_signer.SignerDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignerDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_signer.SignerDataReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_signer.SignerDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_signer.SignerDataReply)
  return false;
#undef DO_
}

void SignerDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_signer.SignerDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_signer.SignerDataReply)
}

::google::protobuf::uint8* SignerDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_signer.SignerDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes message = 1;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_signer.SignerDataReply)
  return target;
}

size_t SignerDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_signer.SignerDataReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignerDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_signer.SignerDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SignerDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignerDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_signer.SignerDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_signer.SignerDataReply)
    MergeFrom(*source);
  }
}

void SignerDataReply::MergeFrom(const SignerDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_signer.SignerDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void SignerDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_signer.SignerDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignerDataReply::CopyFrom(const SignerDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_signer.SignerDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignerDataReply::IsInitialized() const {
  return true;
}

void SignerDataReply::Swap(SignerDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignerDataReply::InternalSwap(SignerDataReply* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignerDataReply::GetMetadata() const {
  protobuf_protobuf_5fsigner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_5fsigner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_signer
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpc_signer::SignerDataRequest* Arena::CreateMaybeMessage< ::grpc_signer::SignerDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::grpc_signer::SignerDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpc_signer::SignerDataReply* Arena::CreateMaybeMessage< ::grpc_signer::SignerDataReply >(Arena* arena) {
  return Arena::CreateInternal< ::grpc_signer::SignerDataReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
