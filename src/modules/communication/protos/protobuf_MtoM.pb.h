// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_MtoM.proto

#ifndef PROTOBUF_INCLUDED_protobuf_5fMtoM_2eproto
#define PROTOBUF_INCLUDED_protobuf_5fMtoM_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_5fMtoM_2eproto 

namespace protobuf_protobuf_5fMtoM_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protobuf_5fMtoM_2eproto
namespace grpcMtoM {
class CheckAliveReply;
class CheckAliveReplyDefaultTypeInternal;
extern CheckAliveReplyDefaultTypeInternal _CheckAliveReply_default_instance_;
class CheckAliveRequest;
class CheckAliveRequestDefaultTypeInternal;
extern CheckAliveRequestDefaultTypeInternal _CheckAliveRequest_default_instance_;
class DataReply;
class DataReplyDefaultTypeInternal;
extern DataReplyDefaultTypeInternal _DataReply_default_instance_;
class DataRequest;
class DataRequestDefaultTypeInternal;
extern DataRequestDefaultTypeInternal _DataRequest_default_instance_;
}  // namespace grpcMtoM
namespace google {
namespace protobuf {
template<> ::grpcMtoM::CheckAliveReply* Arena::CreateMaybeMessage<::grpcMtoM::CheckAliveReply>(Arena*);
template<> ::grpcMtoM::CheckAliveRequest* Arena::CreateMaybeMessage<::grpcMtoM::CheckAliveRequest>(Arena*);
template<> ::grpcMtoM::DataReply* Arena::CreateMaybeMessage<::grpcMtoM::DataReply>(Arena*);
template<> ::grpcMtoM::DataRequest* Arena::CreateMaybeMessage<::grpcMtoM::DataRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace grpcMtoM {

// ===================================================================

class CheckAliveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpcMtoM.CheckAliveRequest) */ {
 public:
  CheckAliveRequest();
  virtual ~CheckAliveRequest();

  CheckAliveRequest(const CheckAliveRequest& from);

  inline CheckAliveRequest& operator=(const CheckAliveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckAliveRequest(CheckAliveRequest&& from) noexcept
    : CheckAliveRequest() {
    *this = ::std::move(from);
  }

  inline CheckAliveRequest& operator=(CheckAliveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckAliveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckAliveRequest* internal_default_instance() {
    return reinterpret_cast<const CheckAliveRequest*>(
               &_CheckAliveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CheckAliveRequest* other);
  friend void swap(CheckAliveRequest& a, CheckAliveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckAliveRequest* New() const final {
    return CreateMaybeMessage<CheckAliveRequest>(NULL);
  }

  CheckAliveRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckAliveRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckAliveRequest& from);
  void MergeFrom(const CheckAliveRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckAliveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool checker = 1;
  void clear_checker();
  static const int kCheckerFieldNumber = 1;
  bool checker() const;
  void set_checker(bool value);

  // @@protoc_insertion_point(class_scope:grpcMtoM.CheckAliveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool checker_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fMtoM_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckAliveReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpcMtoM.CheckAliveReply) */ {
 public:
  CheckAliveReply();
  virtual ~CheckAliveReply();

  CheckAliveReply(const CheckAliveReply& from);

  inline CheckAliveReply& operator=(const CheckAliveReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckAliveReply(CheckAliveReply&& from) noexcept
    : CheckAliveReply() {
    *this = ::std::move(from);
  }

  inline CheckAliveReply& operator=(CheckAliveReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckAliveReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckAliveReply* internal_default_instance() {
    return reinterpret_cast<const CheckAliveReply*>(
               &_CheckAliveReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CheckAliveReply* other);
  friend void swap(CheckAliveReply& a, CheckAliveReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckAliveReply* New() const final {
    return CreateMaybeMessage<CheckAliveReply>(NULL);
  }

  CheckAliveReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckAliveReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckAliveReply& from);
  void MergeFrom(const CheckAliveReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckAliveReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  bool message() const;
  void set_message(bool value);

  // @@protoc_insertion_point(class_scope:grpcMtoM.CheckAliveReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fMtoM_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpcMtoM.DataRequest) */ {
 public:
  DataRequest();
  virtual ~DataRequest();

  DataRequest(const DataRequest& from);

  inline DataRequest& operator=(const DataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataRequest(DataRequest&& from) noexcept
    : DataRequest() {
    *this = ::std::move(from);
  }

  inline DataRequest& operator=(DataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRequest* internal_default_instance() {
    return reinterpret_cast<const DataRequest*>(
               &_DataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DataRequest* other);
  friend void swap(DataRequest& a, DataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataRequest* New() const final {
    return CreateMaybeMessage<DataRequest>(NULL);
  }

  DataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataRequest& from);
  void MergeFrom(const DataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:grpcMtoM.DataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fMtoM_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpcMtoM.DataReply) */ {
 public:
  DataReply();
  virtual ~DataReply();

  DataReply(const DataReply& from);

  inline DataReply& operator=(const DataReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataReply(DataReply&& from) noexcept
    : DataReply() {
    *this = ::std::move(from);
  }

  inline DataReply& operator=(DataReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataReply* internal_default_instance() {
    return reinterpret_cast<const DataReply*>(
               &_DataReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DataReply* other);
  friend void swap(DataReply& a, DataReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataReply* New() const final {
    return CreateMaybeMessage<DataReply>(NULL);
  }

  DataReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataReply& from);
  void MergeFrom(const DataReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool checker = 1;
  void clear_checker();
  static const int kCheckerFieldNumber = 1;
  bool checker() const;
  void set_checker(bool value);

  // @@protoc_insertion_point(class_scope:grpcMtoM.DataReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool checker_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fMtoM_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CheckAliveRequest

// bool checker = 1;
inline void CheckAliveRequest::clear_checker() {
  checker_ = false;
}
inline bool CheckAliveRequest::checker() const {
  // @@protoc_insertion_point(field_get:grpcMtoM.CheckAliveRequest.checker)
  return checker_;
}
inline void CheckAliveRequest::set_checker(bool value) {
  
  checker_ = value;
  // @@protoc_insertion_point(field_set:grpcMtoM.CheckAliveRequest.checker)
}

// -------------------------------------------------------------------

// CheckAliveReply

// bool message = 1;
inline void CheckAliveReply::clear_message() {
  message_ = false;
}
inline bool CheckAliveReply::message() const {
  // @@protoc_insertion_point(field_get:grpcMtoM.CheckAliveReply.message)
  return message_;
}
inline void CheckAliveReply::set_message(bool value) {
  
  message_ = value;
  // @@protoc_insertion_point(field_set:grpcMtoM.CheckAliveReply.message)
}

// -------------------------------------------------------------------

// DataRequest

// bytes data = 1;
inline void DataRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataRequest::data() const {
  // @@protoc_insertion_point(field_get:grpcMtoM.DataRequest.data)
  return data_.GetNoArena();
}
inline void DataRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpcMtoM.DataRequest.data)
}
#if LANG_CXX11
inline void DataRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpcMtoM.DataRequest.data)
}
#endif
inline void DataRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpcMtoM.DataRequest.data)
}
inline void DataRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpcMtoM.DataRequest.data)
}
inline ::std::string* DataRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grpcMtoM.DataRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataRequest::release_data() {
  // @@protoc_insertion_point(field_release:grpcMtoM.DataRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grpcMtoM.DataRequest.data)
}

// -------------------------------------------------------------------

// DataReply

// bool checker = 1;
inline void DataReply::clear_checker() {
  checker_ = false;
}
inline bool DataReply::checker() const {
  // @@protoc_insertion_point(field_get:grpcMtoM.DataReply.checker)
  return checker_;
}
inline void DataReply::set_checker(bool value) {
  
  checker_ = value;
  // @@protoc_insertion_point(field_set:grpcMtoM.DataReply.checker)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcMtoM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protobuf_5fMtoM_2eproto
