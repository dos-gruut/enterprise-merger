image: ubuntu

cache:
  key: ${CI_JOB_NAME}
  paths:
    - grpc/
    - leveldb
stages:
  - build

build:
  stage: build
#  only: [merge-request]
  before_script:
    - apt-get update -y && apt-get upgrade -y
    - apt-get install -y curl git python3 python3-pip clang-tidy clang-6.0 lld-6.0 build-essential autoconf libtool pkg-config
    #  boost
    - apt-get install -y libboost1.65-all-dev
    - pip3 install cmake
    - |
        if [[ -z $(ls | grep grpc) ]]; then
          git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc
        fi
    - |
        if [[ -z $(ls | grep leveldb) ]]; then
          git clone https://github.com/google/leveldb.git
        fi
  script:
    - ls
    - cd grpc && git submodule update --init && make && make install && cd third_party/protobuf && make install && cd ../../..
    - echo "grpc installed"
    - pwd && ls
    - |
        if [[ -n $(ls | grep leveldb) ]]; then
          cd leveldb && mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && cmake --build . && make install && cd ../..
        fi
    - echo "leveldb installed"
    - pwd && ls
    - mkdir -p build && cd build
    - cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DENABLE_CLANG_TIDY=ON -DCMAKE_CXX_COMPILER="clang++-6.0" ..
    - cp ../scripts/run-clang-tidy.py run-clang-tidy.py
    - pip3 install pyyaml
    - python3 run-clang-tidy.py > lint_output.txt
    - |
      if [[ -n $(grep "warning: " lint_output.txt) ]] || [[ -n $(grep "error: " lint_output.txt) ]]; then
        echo "You must pass the clang tidy checks before submitting a pull request"
        echo ""
        grep --color -E '^|warning: |error: ' lint_output.txt
        exit -1;
      else
        echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
      fi
    - cmake --build .
    - cd tests && cmake --build .
    - cd ..
    - ctest > test_output.txt
    - |
      if [[ -n $(grep "warning: " test_ouput.txt) ]] || [[ -n $(grep "error: " test_output.txt) ]]; then
        echo "You must pass tests, checks before submitting a pull request"
        echo ""
        grep --color -E '^|warning: |error: ' test_output.txt
        exit -1;
      else
        echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
      fi